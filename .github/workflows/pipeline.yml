name: Deploy Socks Shop to GKE

on:
  push:
    branches:
      - main

jobs:
  setup-infrastructure:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Authenticate Google Cloud
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
        
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      # working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan
      
    - name: Terraform Apply
      run: terraform apply --auto-approve
      # working-directory: ./terraform

  deploy-app:
    runs-on: ubuntu-latest
    needs: setup-infrastructure

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: v1.25.0

    - name: Authenticate to Google Cloud
      run: |
        echo "${{ secrets.SERVICE_ACCOUNT_KEY }}" > $HOME/gcloud-key.json
        gcloud auth activate-service-account --key-file=$HOME/gcloud-key.json

    - name: Authenticate to GKE
      run: |
        gcloud container clusters get-credentials capstone-gke \
        --zone us-east1-b --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Deploy the Socks Shop application
      run: |
        kubectl create namespace sock-shop
        kubectl apply -f ./microservices-demo/deploy/kubernetes/complete-demo.yaml
        kubectl config set-context --current --namespace=sock-shop

    - name: Deploy monitoring components (Prometheus & Grafana)
      run: |
        kubectl apply -f ./microservices-demo/deploy/kubernetes/manifests-monitoring

    - name: Deploy Alertmanager
      run: |
        kubectl create secret generic slack-hook-url --from-literal=slack-hook-url='${{ secrets.SLACK_HOOK_URL }}' -n sock-shop
        kubectl apply -f ./microservices-demo/deploy/kubernetes/manifests-alerting

    - name: Deploy Ingress Controller
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        helm install nginx-ingress ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace

    - name: Deploy Let's Encrypt Certificates
      run: |
        helm repo add jetstack https://charts.jetstack.io
        helm repo update
        helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.5.4 --set installCRDs=true
        kubectl apply -f ./microservices-demo/deploy/kubernetes/cluster-issuer.yaml
        kubectl apply -f ./microservices-demo/deploy/kubernetes/ingress.yaml

    - name: Apply Network Policies
      run: kubectl apply -f ./microservices-demo/deploy/kubernetes/manifests-policy

  post-deployment:
    runs-on: ubuntu-latest
    needs: deploy-app

    steps:
    - name: Send deployment notification to Slack
      uses: slackapi/slack-github-action@v1.18.0
      with:
        slack-message: 'Deployment of the Socks Shop microservices application to GKE is complete!'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
